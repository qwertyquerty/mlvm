/* Generated by MLVC Compiler */

.offset 0x8000
.offset 0x8000

LND $mlvc_program_start JMP

.set mlvc_static_var_x 0x400
.set mlvc_static_var_y 0x401
.set mlvc_static_var_c 0x402

/* MLVC function flip */
mlvc_function_flip:
    LNA 1
    LND 0x6003 WRA
    RET

.set mlvc_static_var_rnd_ret 0x403

/* MLVC function rnd */
mlvc_function_rnd:
    /* Begin MLVC asm block */
    RND
    LND
    $mlvc_static_var_rnd_ret
    WRA
    /* End MLVC asm block */
    RET


/* MLVC function set_pixel */
mlvc_function_set_pixel:
    LND $mlvc_static_var_x RDA
    LND 0x6000 WRA
    LND $mlvc_static_var_y RDA
    LND 0x6001 WRA
    LND $mlvc_static_var_c RDA
    LND 0x6002 WRA
    RET


mlvc_program_start:
loop_0_begin: /* Begin MLVC while block */
    /* MLVC if expression */
    LNA 1
    LND $loop_0_end JNA /* MLVC while conditional */
    LND $mlvc_function_rnd SRT /* Calling MLVC function rnd */
    LND $mlvc_static_var_rnd_ret RDA
    LND $mlvc_static_var_c WRA
    LND $mlvc_function_set_pixel SRT /* Calling MLVC function set_pixel */
    LNB 1
    LND $mlvc_static_var_x RDA
    ADD
    LND $mlvc_static_var_x WRC
    /* MLVC if expression */
    LNB 64
    LND $mlvc_static_var_x RDA
    CMP
    LND $conditional_0_else JNC /* MLVC if conditional */
    LND $mlvc_function_rnd SRT /* Calling MLVC function rnd */
    LNB 2
    LND $mlvc_static_var_y RDA
    ADD
    LND $mlvc_static_var_y WRC
    LNA 0
    LND $mlvc_static_var_x WRA
    /* MLVC if expression */
    LNB 64
    LND $mlvc_static_var_y RDA
    GTE
    LND $conditional_1_else JNC /* MLVC if conditional */
    LNA 0
    LND $mlvc_static_var_y WRA
    LND $mlvc_function_flip SRT /* Calling MLVC function flip */
conditional_1_else: /* End MLVC if statement */
conditional_0_else: /* End MLVC if statement */
    LND $loop_0_begin JMP
loop_0_end: /* End MLVC while block */
