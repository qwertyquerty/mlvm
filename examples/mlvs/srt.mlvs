/* Fibonacci in MLVM Assembly with subroutines */

.offset 0x8000          /* ROM starts at 0x8000 */
.seek 0x8000

start:
    LNE 0x0101          /* A = 1, B = 1 */

loop:
    LND $log SRT        /* Log A to debug console */
    ADD                 /* C = A + B */
    LND $halt JSC       /* Jump to halt if carry bit is set (overflow) */
    SBA                 /* B = A */
    SAC                 /* A = C */
    LND $loop JMP       /* goto loop */

halt:
    HLT

log:
    DLA
    RET
