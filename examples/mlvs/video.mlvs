/* Video in MLVM Assembly */

.set X 0x1000
.set Y 0x1001

.set REG_X 0x6000
.set REG_Y 0x6001
.set REG_C 0x6002
.set REG_FLIP 0x6003

.set VIDEO_W 64
.set VIDEO_H 64

.offset 0x8000          /* ROM starts at 0x8000 */
.seek 0x8000

start:

loop:
    LND $X RDA          /* Load X and Y and write them to video registers */
    LND $REG_X WRA
    LND $Y RDB
    LND $REG_Y WRB

    RND                 /* Load a random color and write it to the color register */
    LND $REG_C WRA

    LND $X RDA          /* Increment X by 1 */
    LNB 1
    ADD
    SAC
    LND $X WRA          /* Write X back to memory */

    LNB $VIDEO_H        /* If X == 64, jump to reset_x subroutine */
    CMP
    LND $sub_reset_x SIC

    LND $loop JMP       /* Loop forever */

sub_reset_x:
    LNA 0x00            /* Reset X to zero */
    LND $X WRA

    LND $Y RDA          /* Increment Y */
    LNB 1
    ADD
    SAC
    LND $Y WRA          /* Write new Y value to memory */

    LNB $VIDEO_H        /* If Y == 64, jump to reset_y subroutine */
    CMP
    LND $sub_reset_y SIC
    RET

sub_reset_y:
    LNA 0x00            /* Reset Y to zero */
    LND $Y WRC
    LND $sub_flip SRT   /* Update the screen */
    RET

sub_flip:               /* Writes a one to the doublebuffer flip register */
    LNA 0x01
    LND $REG_FLIP WRA
    RET
