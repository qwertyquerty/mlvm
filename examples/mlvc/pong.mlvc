include gamepad;
include graphics;
include system;
include time;

define PADDLE_WIDTH 10; define PADDLE_HEIGHT 2; define PADDLE_Y 60;
define BALL_SIZE 3;
define SCREEN_SIZE 64;
define FRAME_LENGTH_DMS 167;

var ball_x ball_y paddle_x ball_vx ball_vy score;

begin

set score = 0;
set ball_x = 60;
set ball_y = 0;
set ball_vx = 0xFF;
set ball_vy = 1;
set paddle_x = 2;

while 1 {
    call reset_timers;
    call screen_clear;
    call gp_buttons;

    if gp_buttons_ret & GP_BUTTON_R && paddle_x < (SCREEN_SIZE-PADDLE_WIDTH) {
        set paddle_x = paddle_x + 1;
    }

    if gp_buttons_ret & GP_BUTTON_L && paddle_x > 0 {
        set paddle_x = paddle_x - 1;
    }

    set ball_x = ball_x + ball_vx;
    set ball_y = ball_y + ball_vy;

    if ball_x == (SCREEN_SIZE - BALL_SIZE) && ball_vx == 1 { /* Right edge */
        set ball_vx = 0xFF;
    }
    
    if ball_x == 0 && ball_vx == 0xFF { /* Left edge */
        set ball_vx = 1;
    }

    if ball_y == 0 && ball_vy == 0xFF { /* Top edge */
        set ball_vy = 1;
        set score = score + 1;
    }

    if /* Paddle Collisions */
        ball_y == (PADDLE_Y - BALL_SIZE)
        && ball_vy == 1
        && (ball_x + BALL_SIZE) > paddle_x
        && ball_x < (paddle_x + PADDLE_WIDTH + BALL_SIZE) 
    {
        set ball_vy = 0xFF;
    }

    if ball_y == SCREEN_SIZE { /* Bottom edge */
        call exit;
    }

    /* Draw ball */
    set rect_x = ball_x; set rect_y = ball_y; set rect_w = 3; set rect_h = 3; set rect_c = 0xF7;
    call draw_rect;
    
    /* Draw paddle */
    set rect_x = paddle_x; set rect_y = PADDLE_Y; set rect_w = PADDLE_WIDTH; set rect_h = PADDLE_HEIGHT; set rect_c = 0xE4;
    call draw_rect;

    /* Draw score */
    set rect_x = 1; set rect_y = 1; set rect_w = score; set rect_h = 1; set rect_c = 0b11111001;
    call draw_rect;

    /* Frame update */
    call screen_flip;

    call get_hms_time;
    asm {#DLA}

    call get_dms_time;
    set sleep_dms_n = FRAME_LENGTH_DMS - get_dms_time_ret;
    call sleep_dms;
}
